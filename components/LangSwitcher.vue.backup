<template>
  <div class="inline-block w-[105px]">
    <Listbox v-model="selectedLang" @update:modelValue="switchLang(selectedLang)">
      <div class="relative mt-1">
        <ListboxButton
          class="relative w-full rounded-lg bg-white py-2 pl-3 pr-10 text-left border border-gray-300 focus:outline-none focus-visible:border-indigo-500 focus-visible:ring-2 focus-visible:ring-white focus-visible:ring-opacity-75 focus-visible:ring-offset-2 focus-visible:ring-offset-orange-300 sm:text-sm cursor-pointer">
          <div class="flex items-center gap-2">
            <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none"
              stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <path class="st0" d="M2,16c0.1,0,8-5,9-7c0.6-1.3,1-5,1-5h3H1h7V1"></path>
              <line class="st0" x1="4" y1="8" x2="12" y2="16"></line>
              <polygon class="st0" points="15,19 21,19 23,23 18,11 13,23 "></polygon>
            </svg>
            <span class="block truncate text-base font-semibold">{{ selectedLang.name }}</span>
            <span class="pointer-events-none absolute inset-y-0 right-0 flex items-center pr-2">
              <Icon name="bi:chevron-expand" class="text-lg text-gray-400" />
            </span>
          </div>
        </ListboxButton>

        <transition leave-active-class="transition duration-100 ease-in" leave-from-class="opacity-100"
          leave-to-class="opacity-0">
          <ListboxOptions
            class="absolute mt-1 max-h-60 w-full overflow-auto rounded-md bg-white  text-base shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none">
            <ListboxOption v-slot="{ active, selected }" v-for="lang in languages" :key="lang.name" :value="lang"
              as="template">
              <li :class="[
                active ? 'bg-orange-50 text-amber-900' : 'text-gray-900',
                selected ? 'bg-orange-50 text-amber-900' : '',
                'relative cursor-pointer select-none py-2 pl-3 pr-3',
              ]">
                <div class="flex items-center gap-2">
                  <span v-html="lang.icon"></span>
                  <span :class="[
                    'block truncate font-medium',
                  ]">{{ lang.name }}</span>
                  <!-- <span v-if="selected" class="absolute inset-y-0 left-0 flex items-center pl-3 text-amber-600">
                    <Icon name="bi:check-lg" class="text-xl" />
                  </span> -->
                </div>
              </li>
            </ListboxOption>
          </ListboxOptions>
        </transition>
      </div>
    </Listbox>
  </div>
</template>

<script setup>
import {
  Listbox,
  ListboxButton,
  ListboxOptions,
  ListboxOption,
} from '@headlessui/vue'

const { setLocale, locale } = useI18n()
const switchLocalePath = useSwitchLocalePath()
const localePath = useLocalePath()

const languages = [
  {
    id: 1,
    code: 'en',
    name: 'EN',
    icon: `<svg xmlns=" http://www.w3.org/2000/svg" width="18" height="18" id="flag-icons-gb" viewBox="0 0 640 480">
            <path fill="#012169" d="M0 0h640v480H0z"></path>
            <path fill="#FFF"
              d="m75 0 244 181L562 0h78v62L400 241l240 178v61h-80L320 301 81 480H0v-60l239-178L0 64V0h75z"></path>
            <path fill="#C8102E"
              d="m424 281 216 159v40L369 281h55zm-184 20 6 35L54 480H0l240-179zM640 0v3L391 191l2-44L590 0h50zM0 0l239 176h-60L0 42V0z">
            </path>
            <path fill="#FFF" d="M241 0v480h160V0H241zM0 160v160h640V160H0z"></path>
            <path fill="#C8102E" d="M0 193v96h640v-96H0zM273 0v480h96V0h-96z"></path>
          </svg>`
  },
  {
    id: 3,
    code: 'id',
    name: 'ID',
    icon: `<svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" id="flag-icons-id" viewBox="0 0 640 480">
            <path fill="#e70011" d="M0 0h640v240H0Z"></path>
            <path fill="#f4f5f6" d="M0 240h640v240H0Z"></path>
          </svg>`
  }
]
const selectedLang = ref(useCookie('i18n_redirected').value === 'id' ? languages[1] : languages[0])

const router = useRouter()
const route = useRoute()

// onMounted(() => {
//   if (useCookie('i18n_redirected').value !== 'en') {
//     router.p
//   }
// })

function switchLang(lang) {
  setLocale(lang.code)
  switchLocalePath(lang.code)
  useCookie('i18n_redirected').value = lang.code
  // router.push(route.path)
  // localStorage.setItem('lang', lang.code)
  window.location.href = localePath(route.path);
}

</script>